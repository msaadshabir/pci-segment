name: CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ["1.25.2"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: make test

      - name: Build binary
        run: make build

      - name: Validate example policies
        run: |
          ./bin/pci-segment validate -f examples/policies/cde-isolation.yaml
          ./bin/pci-segment validate -f examples/policies/cde-database.yaml

      - name: Test invalid policy detection
        run: |
          ./bin/pci-segment validate -f examples/policies/invalid-policy.yaml && exit 1 || exit 0

      - name: Generate compliance report
        run: ./bin/pci-segment report -f examples/policies/cde-isolation.yaml -o test-report.html

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25.2"
          check-latest: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.59.1
          args: --timeout=5m

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: "./..."

  build-release:
    name: Build Release Binaries
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25.2"
          check-latest: true

      - name: Build for multiple platforms
        run: |
          # Linux AMD64
          GOOS=linux GOARCH=amd64 go build -o pci-segment-linux-amd64 .

          # Linux ARM64
          GOOS=linux GOARCH=arm64 go build -o pci-segment-linux-arm64 .

          # macOS AMD64
          GOOS=darwin GOARCH=amd64 go build -o pci-segment-darwin-amd64 .

          # macOS ARM64 (Apple Silicon)
          GOOS=darwin GOARCH=arm64 go build -o pci-segment-darwin-arm64 .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pci-segment-binaries
          path: pci-segment-*
